class Solution {
    public int shortestPathBinaryMatrix(int[][] grid) {
        if(grid[0][0]!=0||grid[grid.length-1][grid.length-1]!=0)return -1;
        int res = dfs(0,0,grid,1);
        return res == Integer.MAX_VALUE?-1:res;
    }
    
    private int dfs(int i,int j,int[][]grid,int hops){
        
        if(i==grid.length-1&&j==grid.length-1)
            return hops;
			
		grid[i][j]=1;
		
        int res = Integer.MAX_VALUE;
        for(int r=-1;r<=1;r++){
            for(int c=-1;c<=1;c++){
                if(r==0&&c==0)continue;
                int row=i+r;
                int col=j+c;
				
                if(row>=0&&row<grid.length
                    &&col>=0&&col<grid.length
                    &&grid[row][col]==0)
                    res= Math.min(dfs(row,col,grid,hops+1),res);
            }
        }
        grid[i][j]=0;
        return res;
    }
}