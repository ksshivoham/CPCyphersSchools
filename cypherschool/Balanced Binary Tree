/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
public boolean isBalanced(TreeNode root) {

    if(root == null)
        return true;
    else{
        int hl = height(root.left);
        int hr = height(root.right);
        
        if(Math.abs(hl - hr) <= 1 && isBalanced(root.left) 
           && isBalanced(root.right))
           return true;
        else
            return false;
    }
    
}

public int height(TreeNode root){
    if(root == null)
        return 0;
    else{
        int hl = height(root.left);
        int hr = height(root.right);
        
      
        return Math.max(hl,hr) + 1;
    }
}
}