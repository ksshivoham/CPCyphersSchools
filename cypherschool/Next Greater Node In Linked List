/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int[] nextLargerNodes(ListNode head) {
        
        ListNode iterator = head;
        Stack<Integer> stack = new Stack<>(); 
        int len = 0;
        int list [] = new int [10000];
        while (iterator != null) {
            list[len] = iterator.val;
            iterator = iterator.next;
            len ++;
        }
        
        int results [] = new int [len];
        for (int i = len - 1; i >= 0; i --) {
            while (!stack.isEmpty()) {
                int iter = stack.peek();
                
                if (list[iter] > list[i]) {
            
                    results[i] = list[iter];
                    stack.push(i);
                    break;
                }
                
                stack.pop();
            }   
            
            if (stack.isEmpty()) {
                results[i] = 0;
                stack.push(i);
            }
        }
        
        return results;
    }
}