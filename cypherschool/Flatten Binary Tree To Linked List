/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public void flatten(TreeNode root) {
        if(root==null)
        {
            return;
        }
        fl(root);
    }
    public TreeNode fl(TreeNode node)
    {
        if(node.left==null && node.right==null)
        {
            return node;
        }
        TreeNode lkt = null;
        TreeNode slkt=null;
        if(node.right!=null){
          lkt=fl(node.right);
        }
        if(node.left!=null)
        {
             slkt = fl(node.left);
            if(node.right!=null)
            {
                slkt.right=node.right;
            }
            node.right= node.left;
            node.left=null;
        }
        return lkt!=null?lkt:slkt;
    }
}