class Solution {
    public int calculate(String s) {
        Stack<Integer> stk = new Stack<Integer>();
        int sign = 1;
        char operator = '!';
        for(int i = 0; i < s.length(); i++){
            char c = s.charAt(i);
            if(Character.isDigit(c)){
                int curr = Character.getNumericValue(c);
                while(i + 1 < s.length() && Character.isDigit(s.charAt(i + 1))){
                    curr = curr * 10 + Character.getNumericValue(s.charAt(i + 1));
                    i++;
                }
                if(operator != '!'){
                    int prev = stk.pop();
                    int res = 0;
                    if(operator == '*'){
                        res = prev * curr;
                    }else{
                        res = prev / curr;
                    }
                    stk.push(res);
                    operator = '!';
                }else{
                    stk.push(curr * sign);    
                }
            }else if(c == '-'){
                sign = -1;
            }else if(c == '+'){
                sign = 1;
            }else if(c == '*' || c == '/'){
                operator = c;
            }
        }
        int result = 0;
        while(!stk.isEmpty()){
            result += stk.pop();
        }
        return result;
    }
}